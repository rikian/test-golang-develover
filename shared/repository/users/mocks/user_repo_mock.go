// Code generated by MockGen. DO NOT EDIT.
// Source: shared/repository/users/user.go

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	context "context"
	users "go/service1/grpc-app/protos/users"
	entities "go/service1/shared/models/entities"
	table "go/service1/shared/models/entities/table"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserRepository is a mock of UserRepository interface.
type MockUserRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserRepositoryMockRecorder
}

// MockUserRepositoryMockRecorder is the mock recorder for MockUserRepository.
type MockUserRepositoryMockRecorder struct {
	mock *MockUserRepository
}

// NewMockUserRepository creates a new mock instance.
func NewMockUserRepository(ctrl *gomock.Controller) *MockUserRepository {
	mock := &MockUserRepository{ctrl: ctrl}
	mock.recorder = &MockUserRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRepository) EXPECT() *MockUserRepositoryMockRecorder {
	return m.recorder
}

// SelectSessionUserById mocks base method.
func (m *MockUserRepository) SelectSessionUserById(arg0 context.Context, arg1 *users.RequestSelectSessionUserById) (*entities.ResponSelectSessionUserById, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectSessionUserById", arg0, arg1)
	ret0, _ := ret[0].(*entities.ResponSelectSessionUserById)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectSessionUserById indicates an expected call of SelectSessionUserById.
func (mr *MockUserRepositoryMockRecorder) SelectSessionUserById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectSessionUserById", reflect.TypeOf((*MockUserRepository)(nil).SelectSessionUserById), arg0, arg1)
}

// SelectUser mocks base method.
func (m *MockUserRepository) SelectUser(arg0 context.Context, arg1 *users.RequestSelectUser) (*table.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectUser", arg0, arg1)
	ret0, _ := ret[0].(*table.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectUser indicates an expected call of SelectUser.
func (mr *MockUserRepositoryMockRecorder) SelectUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectUser", reflect.TypeOf((*MockUserRepository)(nil).SelectUser), arg0, arg1)
}
